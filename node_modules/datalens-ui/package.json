{
  "_args": [
    [
      {
        "raw": "datalens-ui@http://js.in.datalens.here.com/npm/datalens-ui-1.2.7.tgz",
        "scope": null,
        "escapedName": "datalens-ui",
        "name": "datalens-ui",
        "rawSpec": "http://js.in.datalens.here.com/npm/datalens-ui-1.2.7.tgz",
        "spec": "http://js.in.datalens.here.com/npm/datalens-ui-1.2.7.tgz",
        "type": "remote"
      },
      "/Users/scaff/examples-repositories/telco-heatmap-db"
    ]
  ],
  "_from": "http://js.in.datalens.here.com/npm/datalens-ui-1.2.7.tgz",
  "_id": "datalens-ui@1.2.7",
  "_inCache": true,
  "_location": "/datalens-ui",
  "_phantomChildren": {},
  "_requested": {
    "raw": "datalens-ui@http://js.in.datalens.here.com/npm/datalens-ui-1.2.7.tgz",
    "scope": null,
    "escapedName": "datalens-ui",
    "name": "datalens-ui",
    "rawSpec": "http://js.in.datalens.here.com/npm/datalens-ui-1.2.7.tgz",
    "spec": "http://js.in.datalens.here.com/npm/datalens-ui-1.2.7.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "http://js.in.datalens.here.com/npm/datalens-ui-1.2.7.tgz",
  "_shasum": "bdc1c1547f146cc7bf92e7e44af333e5973c2ba9",
  "_shrinkwrap": null,
  "_spec": "datalens-ui@http://js.in.datalens.here.com/npm/datalens-ui-1.2.7.tgz",
  "_where": "/Users/scaff/examples-repositories/telco-heatmap-db",
  "author": "",
  "dependencies": {},
  "description": "map controls for H.ui",
  "devDependencies": {},
  "license": "ISC",
  "main": "src/index.js",
  "name": "datalens-ui",
  "optionalDependencies": {},
  "readme": "# Basic UI for Lenses\n\nThis UI Components are extension of [HERE Maps API Controls](https://developer.here.com/javascript-apis/documentation/v3/maps/topics_api_nlp/h-ui-control.html) They are helpful for simple map visualizations.\n\n## Install\n\nAdd `npm` dependency:\n\n```\nnpm install --save {{tarball}}\n```\n\n## Usage\n\nImport components you want to use\n\nJavaScript:\n\n```js\nimport Panel from 'datalens-ui/Panel';\nimport Label from 'datalens-ui/Label';\n//... and other components\n```\n\nCSS:\n\n```css\n@import \"../node_modules/datalens-ui/Panel/index.css\";\n@import \"../node_modules/datalens-ui/Label/index.css\";\n/*... and other components */\n```\n## Controls API\n\n### Panel\n\nPanel which holds controls\n\n<img src=\"panel.png\" width=\"220\"/>\n\nExample\n\n```js\nconst ui = H.ui.UI.createDefault(map, defaultLayers);\nconst panel = new Panel('Legend Title');\nui.addControl('legend', panel);\n//...\npanel.addChild(someControl);\n//...\npanel.addEventListener('change', () => {\n    //one of controls was updated, process control updates\n});\n```\n\n### Label\n\nLabel for Control\n\n<img src=\"label.png\" width=\"220\"/>\n\nExample\n\n```js\nconst label = new Label();\n//add control to panel before setting value\npanel.addChild(label);\nlabel.setHTML('label text');\n```\n\n### Select\n\nMenu of options allowing single selection\n\n<img src=\"select.png\" width=\"220\"/>\n\nExample\n\n```js\nconst select = new Select({\n    'value1': 'label one',\n    'value2': 'label two'\n});\npanel.addChild(label);\n//...\nconsole.log(`value is ${select.getValue()}`);\n```\n\n### Multi-select\n\nCheck boxes allowing multiple option selection\n\n<img src=\"multiselect.png\" width=\"220\"/>\n\nExample\n\n```js\nconst select = new Multiselect({\n    'value1': 'label one',\n    'value2': 'label two'\n});\npanel.addChild(label);\n//...\nselect.getValue();//outputs array\n```\n\n### Slider\n\nRange slider\n\n<img src=\"slider.png\" width=\"220\"/>\n\nExample\n\n```js\nconst slider = new Slider(10); // init value from 0..100\npanel.addChild(slider);\n//...\nconsole.log(select.getValue()); // outputs number\n```\n\n### Range\n\nSlider with two handles\n\n<img src=\"range.png\" width=\"220\"/>\n\nExample\n\n```js\nconst slider = new Range([10, 90]); // init values from 0..100\npanel.addChild(slider);\n//...\nconsole.log(select.getValue()); // outputs array of 2 numbers\n```\n\n### ColorLegend\n\nColor Legend Control\n\n<img src=\"colorlegend.png\" width=\"220\"/>\n\nExample\n\n```js\nconst colorScale = d3.scaleLinear().range(['red', 'green']);\nconst colorLegend = new ColorLegend(colorScale);\npanel.addChild(colorLegend);\ncolorLegend.setLables([0, 0.5, 1]); //legend labels\n```\n\n## Release (for contributors)\n\nTo release new version type in console:\n\n```\nnpm version <major | minor | patch>\nnpm push origin HEAD --tags\n```\n\nThen [Jenkins Job](https://ci.gi.solo-experiments.com/view/JS%20API%20Dev/job/Lenses%20DL%20CLI%20Publish/) should do the rest.\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "ssh://gerrit.it.here.com:29418/datalens/lib/ui"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.2.7"
}
